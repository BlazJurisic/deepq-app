services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    command: npm run dev -- --host 0.0.0.0
    ports:
      - "8076:5173"
    depends_on:
      - backend
      - db
    environment:
      - VITE_BACKEND_URL=http://0.0.0.0:8077/api/v1
    networks:
      - deepq-network
    volumes:
      - ./frontend:/app

  backend:
    build: ./backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8077:8000"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/deepq
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=development
    networks:
      - deepq-network
    volumes:
      - ./backend:/app

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=deepq
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    networks:
      - deepq-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  pgadmin:
    image: dpage/pgadmin4:6.21
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_LOG_LEVEL: '"ERROR"'
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - deepq-network
    volumes:
      - ./pgadmin_data:/var/lib/pgadmin


networks:
  deepq-network:
    driver: bridge